"""empty message

Revision ID: f0a770bb467a
Revises: 
Create Date: 2018-12-04 04:07:16.012650

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'f0a770bb467a'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('defect_type',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=80), nullable=True),
    sa.Column('primary_type', sa.String(length=80), nullable=True),
    sa.Column('secondary_type', sa.String(length=80), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('manufacturer',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=80), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('fullname', sa.String(length=80), nullable=True),
    sa.Column('email', sa.String(length=35), nullable=True),
    sa.Column('username', sa.String(length=25), nullable=True),
    sa.Column('password', sa.String(length=60), nullable=True),
    sa.Column('creation_date', sa.DateTime(), nullable=True),
    sa.Column('is_approved', sa.Boolean(), nullable=True),
    sa.Column('is_admin', sa.Boolean(), nullable=True),
    sa.Column('is_contributor', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('dataset',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=25), nullable=True),
    sa.Column('description', sa.String(length=256), nullable=True),
    sa.Column('filename', sa.String(length=80), nullable=True),
    sa.Column('user', sa.Integer(), nullable=True),
    sa.Column('creation_date', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('product',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=80), nullable=True),
    sa.Column('spec_file_name', sa.String(length=80), nullable=True),
    sa.Column('spec_image_name', sa.String(length=80), nullable=True),
    sa.Column('manufacturer', sa.Integer(), nullable=True),
    sa.Column('is_approved', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['manufacturer'], ['manufacturer.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('chip',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user', sa.Integer(), nullable=True),
    sa.Column('product', sa.Integer(), nullable=True),
    sa.Column('manufacturer', sa.Integer(), nullable=True),
    sa.Column('is_approved', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['manufacturer'], ['manufacturer.id'], ),
    sa.ForeignKeyConstraint(['product'], ['product.id'], ),
    sa.ForeignKeyConstraint(['user'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user', 'product', 'manufacturer', name='user_manufacturer_product')
    )
    op.create_table('sample',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('chip', sa.Integer(), nullable=True),
    sa.Column('creation_date', sa.DateTime(), nullable=True),
    sa.Column('is_approved', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['chip'], ['chip.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('defect',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('chip', sa.Integer(), nullable=True),
    sa.Column('sample', sa.Integer(), nullable=True),
    sa.Column('defect_type', sa.Integer(), nullable=True),
    sa.Column('defect_image_name', sa.String(length=80), nullable=True),
    sa.Column('creation_date', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['chip'], ['chip.id'], ),
    sa.ForeignKeyConstraint(['defect_type'], ['defect_type.id'], ),
    sa.ForeignKeyConstraint(['sample'], ['sample.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('defect')
    op.drop_table('sample')
    op.drop_table('chip')
    op.drop_table('product')
    op.drop_table('dataset')
    op.drop_table('user')
    op.drop_table('manufacturer')
    op.drop_table('defect_type')
    # ### end Alembic commands ###
